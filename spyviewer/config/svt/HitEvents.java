package config.svt;

import java.util.Iterator;

import hep.analysis.Histogram;
import org.python.util.PythonInterpreter; 
import org.python.core.PyObject;
import org.python.core.Py;

public class HitEvents extends SvtEventsBase {
  private static final String nameStr 
   = new String("layer|barrel|longClusterBit|coordinate|superStripAddress");
  private static final String [] titles = 
    {
       "EoE Error bits ",
       "No. of SVX Hits ", 
       "No. of XFT Hits ", 
       "Layer ", 
       "Barrel ID ", 
       "LC Bit ", 
       "Coordinate ", 
       "SuperStrip Address "
    };
  private Histogram [] hists = new Histogram[0];
    /* Constructor */
  public HitEvents(final int [] data) {
    super(data);
  }
    /** Add an event to the event list
     *  @param  words Svt words for that event
     *  @param  EE End of Event word 
     */
  public void addEvent(final int [] words, int EE) { 
    addEvent(new HitEvent(words, EE));
  }
    /** Return a Hit event from the collection
     *  @param i index in the event collection
     *  @return a Hit Event index by i
     */
  public HitEvent getHitEvent(int i) {
    return (HitEvent) getEvent(i);
  }
  public int getSize() {
    return hists.length;
  }
  public String [] getHistogramTitles() {
    return titles;
  }
  public void createHistograms() {
    hists = new Histogram[titles.length];
    for (int i = 0; i < titles.length; i++)
      hists[i] = new Histogram(titles[i]);
  }
  public void clearHistograms() {
    for (int i = 0; i < hists.length; i++)
      hists[i].clear();
  }
  public Histogram getHistogram(int index) {
    return hists[index];
  }
  public void fillHistograms(boolean singleShot) {
    if (hists.length == 0) 
      createHistograms();
    else if (singleShot)
      clearHistograms();
    for (Iterator<SvtEvent> it = iterator(); it.hasNext(); ) {
      HitEvent event = (HitEvent)it.next();
      if (event == null) throw new RuntimeException("Null event handle!");

      SvtEventsBase.fillEE(hists[0], event.getEE());
	
      hists[1].fill(event.getNSVXHits());
      hists[2].fill(event.getNXFTHits());

      for (Iterator<SvtObject> hits = event.iterator(); hits.hasNext();) {
        Hit hit = (Hit)hits.next();
        hists[3].fill(hit.getLayer());
        if (hit.isXftWord()) {
          hists[7].fill(hit.getSuperStripAddress());
        }
        else {
          hists[4].fill(hit.getBarrel());
          hists[5].fill(hit.getLongClusterBit());
          hists[6].fill(hit.getCoordinate());
        }
      }
    }
  }
  public void fillHistogram(Histogram dHist, final String xvar, 
                                             final String yvar, 
                                             final String cutvar) 
  {
    PythonInterpreter interp = Interpreter.getInstance().getInterpreter();
    for (Iterator<SvtEvent> it = iterator(); it.hasNext(); ) {
      SvtEvent event = it.next();
      for (Iterator<SvtObject> jt = event.iterator(); jt.hasNext();) {
        Hit obj = (Hit) jt.next();
        interp.set("obj", obj);
        PyObject ab = null;
        if (!cutvar.equals("") && cutvar.length() > 0) {
          interp.exec("b = " + cutvar);
          ab = interp.get("b");
        }
        if (ab == null || Py.py2boolean(ab)) {
          interp.exec("x = " + xvar);
          PyObject xval = interp.get("x");
          if (yvar.equals("")) {
            dHist.fill(Py.py2double(xval));
          }
          else {
            interp.exec("y = " + yvar);
            PyObject yval = interp.get("y");
            dHist.fill(Py.py2double(xval), Py.py2double(yval));
          }
        }
      }
    }
  }
  public String getMatchStr() {
   return nameStr;
  }
  public static void main (String [] argv) {
    int [] words = {
        0x2497f8, 0x249588, 0x28a664, 0x249565, 0x2409a8, 0x2409c8, 0x2caa78, 0x289218, 0x2417f8, 0x249238,
        0x2891f8, 0x2ca898, 0x28912a, 0x2485eb, 0x2485c3, 0x288328, 0x2484a4, 0x24832b, 0x2482c8, 0x248049,
        0x248008, 0x2c9628, 0x2c9458, 0x2597f0, 0x218ff0, 0x210108, 0x2597ba, 0x218faa, 0x259788, 0x218f78,
        0x2101d8, 0x250460, 0x2101f8, 0x250498, 0x259760, 0x218f08, 0x210228, 0x2504b8, 0x259738, 0x218ec8,
        0x210258, 0x2504f8, 0x210278, 0x250538, 0x210298, 0x250562, 0x25d700, 0x218e05, 0x25d690, 0x250588,
        0x2102e8, 0x218d68, 0x210308, 0x218b58, 0x259648, 0x2505b0, 0x259618, 0x2505e8, 0x2595e8, 0x250618,
        0x214350, 0x250648, 0x2595b2, 0x218a08, 0x290528, 0x250668, 0x2143b0, 0x250698, 0x259578, 0x2506b8,
        0x259548, 0x218938, 0x259520, 0x2506d8, 0x214410, 0x29a738, 0x214450, 0x29a718, 0x2594f0, 0x250748,
        0x210488, 0x250778, 0x2104a8, 0x29a6f8, 0x2594be, 0x29a6d8, 0x259498, 0x29a640, 0x259478, 0x218828,
        0x259408, 0x29a608, 0x214618, 0x29a5e8, 0x290568, 0x2187e0, 0x2107d8, 0x29a558, 0x2593a8, 0x250b18,
        0x210af8, 0x218788, 0x210b28, 0x29a518, 0x290598, 0x29a4e8, 0x259008, 0x218728, 0x210b60, 0x29a4c8,
        0x210b90, 0x29a498, 0x2905d8, 0x29a468, 0x294620, 0x2186b8, 0x290668, 0x29a3f8, 0x210bf8, 0x218678,
        0x290688, 0x29a098, 0x210c98, 0x218638, 0x2906b8, 0x218618, 0x290710, 0x2587f8, 0x294760, 0x258738,
        0x299b08, 0x258718, 0x2550a8, 0x210da8, 0x299ad8, 0x258688, 0x210de0, 0x2510f8, 0x210e08, 0x251128,
        0x2907a0, 0x299a98, 0x2583e8, 0x218258, 0x2907c8, 0x251158, 0x210e58, 0x251188, 0x2583b8, 0x2511b8,
        0x218138, 0x258398, 0x218108, 0x258368, 0x2180e8, 0x258330, 0x2511f0, 0x2907e8, 0x2180b8, 0x2908d8,
        0x251218, 0x25c2e8, 0x218088, 0x2949b0,	0x218060, 0x290c88, 0x255258, 0x290cb8,	0x2512c8, 0x25c278,
        0x218038, 0x290d58, 0x218010, 0x290dd8,	0x2512f2, 0x290df8, 0x2910e6, 0x251328,	0x2951f8, 0x251358,
        0x291238, 0x251398, 0x2912a0, 0x299a50,	0x2912d8, 0x2999f8, 0x2912f8, 0x2999b0,	0x291698, 0x299968,
        0x295998, 0x2dddf0, 0x29d928, 0x2dddb0,	0x29d8d0, 0x2d934a, 0x29d880, 0x2d9324,	0x299840, 0x291d00,
        0x299810, 0x2d8258, 0x29cfd0, 0x298f90,	0x291d68, 0x298ee8, 0x298ea8, 0x291e68,	0x291e88, 0x298e48,
        0x2a0188, 0x269524, 0x2694e9, 0x2694a3,	0x220f85, 0x220fa8, 0x26d460, 0x265390,	0x26d2c0, 0x261638,
        0x261658, 0x26167d, 0x268f2a, 0x2a1f4a,	0x268e38, 0x2a60c0, 0x26c440, 0x604144,	0x1450d0, 0x2f94e1,
        0x1455c0, 0x2da548, 0x146220, 0x2e3607,	0x2497f8, 0x28a668, 0x2cac58, 0x249228,	0x289218, 0x2891f8,
        0x289038, 0x248008, 0x289018, 0x2ca8d8,	0x2ca818, 0x2ca798, 0x28c590, 0x288298,	0x2c9828, 0x2cd390,
        0x2c8a18, 0x2c88b8, 0x2c8858, 0x2597f2,	0x218fd8, 0x2dacea, 0x2101c8, 0x2596e8,	0x218f28, 0x218f08,
        0x2506e8, 0x259588, 0x29a45f, 0x2103b8,	0x29a328, 0x259048, 0x2189a8, 0x291698,	0x2918c8, 0x21888a,
        0x2106e8, 0x218853, 0x291f18, 0x2107d8,	0x250ec3, 0x210b58, 0x210c38, 0x250eef,	0x258378, 0x2d8638,
        0x2582f8, 0x218638, 0x2582a8, 0x2185e8,	0x251098, 0x258238, 0x258208, 0x218038,	0x218008, 0x2510f8,
        0x258138, 0x251218, 0x298d78, 0x258118,	0x2580e8, 0x2580c8, 0x258028, 0x258008,	0x29848d, 0x298466,
        0x260008, 0x2eaff8, 0x269755, 0x22cf18,	0x2a0188, 0x2600d8, 0x2202fc, 0x26010b,	0x2694a8, 0x2a9e98,
        0x2a0218, 0x260685, 0x2ea2a8, 0x22c8c0,	0x2690d8, 0x268e58, 0x2a989f, 0x2e9dd8,	0x2207f8, 0x220828,
        0x2a4778, 0x260e18, 0x2249f0, 0x265260,	0x2a0af8, 0x261538, 0x224c70, 0x261568,	0x2a0dfc, 0x224d40,
        0x2a19d8, 0x224fc0, 0x2a27cf, 0x60000f,	0x147020, 0x2e56e6, 0x1485d0, 0x2e0844,	0x240008, 0x2899b9,
        0x24d148, 0x2897d8, 0x248ec8, 0x2895bc,	0x248ea3, 0x2caa08, 0x28938a, 0x24ce10,	0x289218, 0x24cdd8,
        0x2ca8b8, 0x2891f8, 0x24c520, 0x288328,	0x2417f2, 0x248018, 0x2ca0b5, 0x2c9c17,	0x2cd6d8, 0x21cc90,
        0x218c48, 0x210218, 0x250618, 0x290608,	0x218bfb, 0x29a128, 0x210298, 0x218af7,	0x299ea7, 0x2188e8,
        0x210300, 0x210338, 0x250bd0, 0x2103a8,	0x2103f8, 0x21c580, 0x210440, 0x259498,	0x210488, 0x21c520,
        0x2908d8, 0x21c4c0, 0x2591d2, 0x298fc8,	0x210776, 0x21c460, 0x291698, 0x21c420,	0x298f88, 0x2107d8,
        0x251108, 0x251168, 0x2148e0, 0x251188,	0x298ec8, 0x2109a5, 0x298e18, 0x251270,	0x2512c8, 0x258268,
        0x291f18, 0x298d68, 0x298d28, 0x2581d8,	0x2581b8, 0x251378, 0x258178, 0x258028,	0x298b98, 0x258008,
        0x2983a8, 0x2982e8, 0x298040, 0x298010,	0x228468, 0x26080b, 0x261100, 0x261448,	0x2a1028, 0x2a1228,
        0x261688, 0x268518, 0x2617f8, 0x2e8008,	0x680047, 0x143d50, 0x2b9401, 0x146670,	0x3ff636, 0x1484c0,
        0x2f5823, 0x28a668, 0x2495cc, 0x2495a6,	0x248a6b, 0x248a48, 0x2ca838, 0x248a15,	0x2891f8, 0x2ca7b8,
        0x2ca778, 0x2417f8, 0x24c5d0, 0x24c588,	0x248558, 0x2c9628, 0x2c87b8, 0x2597f8,	0x218cf8, 0x2595b8,
        0x29a6d8, 0x29a618, 0x2102f8, 0x259583,	0x29a328, 0x2da7d8, 0x210645, 0x21066b,	0x29a128, 0x2107d8,
        0x2908d8, 0x2d8ae8, 0x2923f0, 0x292418,	0x2586a8, 0x258666, 0x29949a, 0x2d8238,	0x299464, 0x258128,
        0x2eaff8, 0x2aa3b8, 0x26951c, 0x228f62,	0x220748, 0x2a008f, 0x2aa0b3, 0x2eabed,	0x22ce50, 0x22094d,
        0x26929a, 0x260868, 0x269218, 0x228d2b,	0x2a0188, 0x2ea908, 0x268f4e, 0x228bbb,	0x224c30, 0x265420,
        0x2a9b30, 0x228b34, 0x26cb50, 0x228b08,	0x220d94, 0x2a9938, 0x268acb, 0x2ea1e8,	0x220dba, 0x228918,
        0x2e9b38, 0x2a94f5, 0x268848, 0x2a9438,	0x2e9b15, 0x2e98a8, 0x2617f8, 0x2680b7,	0x2e9858, 0x228698,
        0x2a8f9d, 0x2285cb, 0x228228, 0x2a84b5,	0x2e85fb, 0x2a2336, 0x2a8008, 0x2e8008,	0x600176, 0x145a40,
        0x2bf5d5, 0x147d70, 0x2bd806, 0x240008,	0x2cac08, 0x244ae0, 0x289218, 0x2891f8,	0x2417f8, 0x2caa98,
        0x28cd10, 0x2caa08, 0x28cbf0, 0x28cba0,	0x288b20, 0x288af0, 0x2ca4c8, 0x248158,	0x248008, 0x2597f8,
        0x290658, 0x210338, 0x2946d0, 0x2da788,	0x25903a, 0x294730, 0x258ff8, 0x2908d8,	0x290905, 0x29092b,
        0x2dde80, 0x299378, 0x290f58, 0x2182a8,	0x2d9b08, 0x2582c8, 0x299028, 0x218028,	0x258008, 0x291f18,
        0x29c720, 0x260435, 0x26047c, 0x2a0898,	0x2644f0, 0x264530, 0x2e8f38, 0x228686,	0x2617f8, 0x2e8008,
        0x68014d, 0x141740, 0x2ed151, 0x142b30,	0x2fb285, 0x1427e0, 0x29128b, 0x146d10,	0x2b96fd, 0x240008,
        0x28e3d0, 0x2caa38, 0x2caa08, 0x28e370,	0x28e310, 0x2417f8, 0x2ca7a8, 0x28e2b0,	0x28e258, 0x28a218,
        0x2ca568, 0x289218, 0x2891f8, 0x2c9628,	0x2597f0, 0x218e62, 0x259744, 0x29a388,	0x2daab8, 0x218d54,
        0x2da7e8, 0x29e350, 0x2188f0, 0x29a310,	0x2907a8, 0x2de680, 0x299b88, 0x2594f8,	0x2908d8, 0x21c020,
        0x258f2e, 0x2da2d8, 0x2913c8, 0x251278,	0x291698, 0x291f18, 0x298ec8, 0x2d8828,	0x258338, 0x298cb8,
        0x258268, 0x29836d, 0x25c0f8, 0x258008,	0x298008, 0x260008, 0x2a0188, 0x2a9e48,	0x2640f0, 0x2a0230,
        0x2a8fa8, 0x220ad8, 0x2a0d98, 0x2284a8,	0x220f32, 0x2a8778, 0x2a1028, 0x2617f8,	0x2e80a8, 0x2e8008,
        0x600173, 0x141380, 0x2af15c, 0x141ce0,	0x2d71bd, 0x142c20, 0x2ff291, 0x144cd0,	0x2f54a4, 0x1464c0,
        0x2b5675, 0x2497f8, 0x240008, 0x28a658,	0x2494a8, 0x2ca898, 0x241548, 0x2ca838,	0x289218, 0x248600,
        0x2891f8, 0x248498, 0x288b78, 0x2ca4b8,	0x241728, 0x2417f8, 0x288695, 0x2c89c8,	0x2c8928, 0x288298,
        0x2c8838, 0x2c87d0, 0x2c865c, 0x2c8638,	0x2c8610, 0x218fd3, 0x29a098, 0x299fd8,	0x21005c, 0x258348,
        0x21ccc0, 0x299e28, 0x25c300, 0x2145b0,	0x21c960, 0x291698, 0x25c2a0, 0x25c268,	0x258248, 0x258228,
        0x2918c8, 0x2d9b78, 0x2d8edb, 0x298708,	0x2d8eb5, 0x2986d8, 0x2d8258, 0x260008,	0x260068, 0x269363,
        0x2aa131, 0x2a0188, 0x2ea8f8, 0x228bf3,	0x22878a, 0x220a96, 0x2286f8, 0x2286d8,	0x2285da, 0x26c920,
        0x220e65, 0x228578, 0x260f68, 0x220eaa,	0x22805a, 0x220ee8, 0x261044, 0x220f28,	0x268538, 0x22c020,
        0x2e9478, 0x261088, 0x261468, 0x2e8008,	0x261638, 0x2a1c58, 0x2617f8, 0x700188,	0x143630, 0x2d8351,
        0x2497f0, 0x240008, 0x2496f8, 0x2cafb8,	0x28a5aa, 0x28a1bd, 0x2493b1, 0x28a195,	0x289218, 0x2891f8,
        0x2454b8, 0x288d85, 0x2ca38d, 0x288588,	0x2417f8, 0x248cd7, 0x288524, 0x2ca358,	0x24873a, 0x2486f8,
        0x2c9638, 0x248118, 0x2c9048, 0x2cc8c8,	0x2c87d6, 0x2597f8, 0x2daf67, 0x250218,	0x250238, 0x29a318,
        0x29103a, 0x210458, 0x259698, 0x21047d,	0x291e72, 0x2da925, 0x250848, 0x2107d8,	0x2de790, 0x2108f5,
        0x210918, 0x250e88, 0x2de758, 0x250ea8,	0x2de710, 0x299848, 0x299828, 0x2997f8,	0x2de6b0, 0x251134,
        0x2587d8, 0x2990b8, 0x2de650, 0x299098,	0x2581c8, 0x2d9cd8, 0x2d9c48, 0x2dd7b0,	0x2dd770, 0x298948,
        0x2987bf, 0x298798, 0x2dd590, 0x2dd200,	0x2eaff8, 0x260008, 0x2a0188, 0x2a0218,	0x2a9e88, 0x268aa8,
        0x2617f8, 0x228088, 0x2e9778, 0x2a1028,	0x2a8f98, 0x2684b8, 0x2a1c38, 0x2a87c8,	0x2a8798, 0x600079,
        0x1442f0, 0x2d2421, 0x1447e0, 0x2bd4ad,	0x1462d0, 0x3ff5fc, 0x145fa0, 0x28c603,	0x148a80, 0x2f1882,
        0x240008, 0x240428, 0x28a796, 0x2caa08,	0x24857c, 0x289218, 0x2ca828, 0x2891f8,	0x248546, 0x2417f8,
        0x2ca7b8, 0x28810c, 0x2ca4c8, 0x288088,	0x2c9275, 0x2c83c8, 0x2c839c, 0x2c8341,	0x2c80c3, 0x2597f8,
        0x210118, 0x290178, 0x21cc30, 0x254850,	0x2908d8, 0x2144c0, 0x2508e3, 0x21807b,	0x25d4b8, 0x2997a8,
        0x2910e4, 0x251108, 0x2d8798, 0x214da0,	0x210dd8, 0x2922b5, 0x251538, 0x2d81d2,	0x210f2a, 0x298207,
        0x2517d0, 0x25c1c0, 0x2580fb, 0x25800d,	0x260008, 0x228fe8, 0x2a0188, 0x220055,	0x2aa018, 0x22007b,
        0x2a033c, 0x260445, 0x26d188, 0x26046b,	0x269148, 0x2a1028, 0x2206b8, 0x22c520,	0x260878, 0x2284da,
        0x228088, 0x261758, 0x2e8008, 0x2a6540,	0x680018, 0x142010, 0x2af225, 0x142060,	0x2af22a, 0x142700,
        0x2d725f, 0x142640, 0x283266, 0x142840,	0x2ab2a5, 0x144830, 0x2d2475, 0x148050,	0x2de7ee, 0x1480e0,
        0x2a982e, 0x240008, 0x28a748, 0x240328,	0x240408, 0x240608, 0x24062c, 0x289efb,	0x2ca798, 0x2492c8,
        0x289e4e, 0x240798, 0x289758, 0x249237,	0x289218, 0x244cd0, 0x2490ae, 0x244d10,	0x2ca531, 0x2891f8,
        0x289038, 0x2411b6, 0x289018, 0x2411e8,	0x288a28, 0x2c9d48, 0x24120a, 0x2417f8,	0x248cd8, 0x28869b,
        0x248408, 0x2483e8, 0x248008, 0x2c8c48,	0x2c86d8, 0x2c860e, 0x2c8008, 0x2597f8,	0x2597b8, 0x218dc6,
        0x210388, 0x299ba8, 0x25d440, 0x218978,	0x2593f8, 0x218958, 0x2998a8, 0x214cd0,	0x290aa1, 0x210e08,
        0x2d9003, 0x25ce30, 0x298f53, 0x25cde8,	0x29134d, 0x2d883e, 0x291698, 0x258b59,	0x218008, 0x2d8238,
        0x298018, 0x2eaff8, 0x260008, 0x2a06da,	0x228c68, 0x2200d4, 0x2602d6, 0x260388,	0x2603a8, 0x2a08b3,
        0x2287bb, 0x268b96, 0x2a95a6, 0x2e9b54,	0x26094c, 0x228678, 0x220558, 0x2285d8,	0x2206c8, 0x260a5a,
        0x2206e8, 0x260c78, 0x228134, 0x260c98,	0x26c160, 0x228088, 0x2613e3, 0x2a8fa8,	0x26c100, 0x2a10a8,
        0x2a12f8, 0x26c0a0, 0x2a1508, 0x2e8008,	0x2617f8, 0x26c040, 0x26c008, 0x2a1de7,	0x2a218a, 0x600085
    }; 
    System.out.println(new HitEvents(words));
    System.exit(0);
  }
}
